<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>Description</key>
	<string>Downloads the latest Audit and imports into Munki.</string>
	<key>Input</key>
	<dict>
        <key>IDENTIFIER</key>
	    <string>com.github.lu-mac-admins.munki.Audit</string>
		<key>NAME</key>
		<string>Audit</string>
        <key>MUNKI_REPO_SUBDIR</key>
        <string>apps/Twocanoes/Audit</string>
		<key>pkginfo</key>
		<dict>
			<key>catalogs</key>
			<array>
				<string>testing</string>
			</array>
			<key>description</key>
			<string>Audit Preference Pane and Log Reader for OS X. OS X has a built in auditing system build into OS X based on OpenBSM. It is configured and setup via the command line, and has some esoteric syntax. To deal with this, I created a system preference pane to configure the options, and a log reader to read and search the binary logs. For more detailed information, see man audit on OS X. The preference pane creates the audit config files in their normal places (/etc/security) and aids in creating the files for later distribution or for individual configuration. https://github.com/twocanoes/audit</string>
			<key>display_name</key>
			<string>%NAME%</string>
			<key>name</key>
			<string>%NAME%</string>
			<key>unattended_install</key>
			<true/>
            <key>unattended_uninstall</key>
            <true/>
			<key>blocking_applications</key>
			<array>
				<string>%NAME%</string>
                <string>System Preferences</string>
			</array>
			<key>preinstall_script</key>
			<string>#!/bin/bash
PATH=/bin:/sbin:/usr/bin:/usr/sbin
umask 0077
logger -s "[INFO] preinstall_script: Creating tarfile backup of /etc/security folder."
tar -jcf /private/etc/security-$(date +"%s").tar.bz2 /private/etc/security/
</string>
			<key>preuninstall_script</key>
			<string>#!/bin/bash
PATH=/bin:/sbin:/usr/bin:/usr/sbin
umask 0077
backup="$(ls -1 /etc/security-*.tar.bz2 | tail -1)"
if [[ -n "$backup" &amp;&amp; -s "$backup" ]]; then
	last_backup="$(ls -1 /private/etc/security-*.tar.bz2 | tail -n 1)"
	if [[ -n "$last_backup" ]]; then
		logger -s "[INFO]preuninstall_script: Identified last backup of /etc/security: $last_backup"
		new_backup="/private/etc/security-$(date +"%s").tar.bz2"
		logger -s "[INFO]preuninstall_script: Creating backup of current configuration before reverting: $new_backup"
		tar -jcf "$new_backup" /private/etc/security
		logger -s "[INFO]preuninstall_script: Reverting /etc/security/ auditd config files from backup: $last_backup"
		tar -jxf "$last_backup" -C /
		logger -s "[INFO] preuninstall_script: Signalling audit/auditd to resync configuration files."
		audit -s
	else
		logger -s "[INFO] No /private/etc/security-*.tar.bz2 backup file found. No restore action taken."
	fi
fi
</string>
		</dict>
	</dict>
	<key>MinimumVersion</key>
	<string>0.2.9</string>
    <key>ParentRecipe</key>
    <string>com.github.lu-mac-admins.pkg.Audit</string>
	<key>Process</key>
	<array>
		<dict>
			<key>Processor</key>
			<string>MunkiInstallsItemsCreator</string>
			<key>Arguments</key>
			<dict>
				<key>faux_root</key>
				<string>%RECIPE_CACHE_DIR%/%NAME%_pkgroot</string>
				<key>installs_item_paths</key>
				<array>
					<string>/Applications/%NAME_APP%</string>
					<string>/Library/PreferencePanes/%NAME_PREFPANE%</string>
				</array>
			</dict>
		</dict>
		<dict>
			<key>Processor</key>
			<string>MunkiPkginfoMerger</string>
		</dict>
		<dict>
			<key>Arguments</key>
			<dict>
				<key>pkg_path</key>
				<string>%pkg_path%</string>
				<key>repo_subdirectory</key>
				<string>%MUNKI_REPO_SUBDIR%</string>
			</dict>
			<key>Processor</key>
			<string>MunkiImporter</string>
		</dict>
	</array>
</dict>
</plist>
